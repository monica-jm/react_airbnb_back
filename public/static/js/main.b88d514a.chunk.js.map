{"version":3,"sources":["services/api.js","services/userWs.js","containers/authContainer/AuthContainer.js","containers/authContainer/SignupContainer.js","containers/homeContainer/index.js","Router.js","App.js","reportWebVitals.js","index.js"],"names":["axios","defaults","withCredentials","_axios","create","baseURL","timeout","login","data","post","signup","AuthContainer","state","handleChange","event","target","value","name","setState","onSubmit","preventDefault","console","log","then","response","catch","error","this","className","uk-icon","type","onChange","placeholder","required","to","Component","SignupContainer","history","props","push","HomeContainer","style","backgroundImage","uk-parallax","Routes","exact","path","component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","UIkit","use","Icons","WithRouter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b88d514a.chunk.js","sourcesContent":["import axios from \"axios\"; \n\n// // valida si la aplicación está en producción o en desarrollo\n// const isProduction =process.env.NODE_ENV === \"production\";\n\n// // si la app ya está en producción \n// const URL = isProduction ? \"https://mjmreactairbnb.herokuapp.com/\" : \"http://localhost:3000/api\";\n\n// Url del back \nconst URL = \"https://mjmreactairbnb.herokuapp.com/api\"\n// Aqui le pedimos que nos guarde la cookie \naxios.defaults.withCredentials = true; \n\nexport const _axios = axios.create({\n    baseURL: URL, \n    timeout: 10000\n});\n\n","// Importamos nuestro axios \nimport {_axios } from './api';\n\nexport const login = (data) =>{\n    //Le pasamos la ruta y los elementos que le vamos a compartir\n    return _axios.post(\"/user/login\", data)\n}\n\nexport const signup = (data) => {\n    return _axios.post(\"/user/signup\", data)\n}\n\nexport const logout = () => {\n    return _axios.post(\"/user/logout\")\n}","import React, {Component} from \"react\";\nimport { login } from \"../../services/userWs\";\nimport { Link } from 'react-router-dom';\n\nexport default class AuthContainer extends Component {\n    // State === minibase de datos para la clase e hijos en caso de que se los herede \n    state = {\n        data: {\n\n        }\n    }\n\n    /* Esta función sirve para escuchar todo lo que estemos tecleando y poder guardarlo en data (está en el state)(para puros inputs), gracias a esto no tenemos que escribir el código comentado de abajo*/\n    // handleChangeEmail = (event) =>{\n    //     const { value } = event.target\n    //     let { data } = this.state\n\n    //     data[\"email\"] = value\n\n    //     this.setState({ data })\n    // }\n\n    // handleChangePassword = (event) => {\n    //     const { value } = event.target\n    //     let { data } = this.state\n\n    //     data[\"password\"] = value\n\n    //     this.setState({ data })\n    // }\n    handleChange = (event) => {\n        // {ke:value} - el key es el name\n        const { value, name } = event.target;\n        let { data } = this.state\n\n        data [name] =value\n\n        // estructura para guardar en el state\n        this.setState({ data })\n    }\n\n    // Esta función envia la info a la base de datos y validar, esto va en el form \n    onSubmit = (event) => {\n        event.preventDefault()\n        console.log(\"Voy a enviar datos\")\n        // Conectamos back con front (es una promesa)\n        login(this.state.data)\n        .then((response)=>{\n            // Si todo sale bien mostramos un mensaje y lo mandamos a la sig sección\n            this.setState({ data:{} })\n            console.log(\"Felicidades\", response)\n        })\n        .catch((error)=>{\n            console.log(\"Hay un error\", error.response)\n        })\n    }\n    \n    render(){\n        //  Aquí podemos declarar const var y let\n        const { handleChange, onSubmit } =this; \n        const { data } = this.state;\n\n        return(\n            <section className=\"uk-section\">\n                <div className=\"uk-container uk-flex uk-flex-center\">\n                    <div className=\"uk-width-1-4\">\n                        <h3>Bienveido </h3>\n                        <form\n                        // método = (()=>onSubmit(event))\n                         onSubmit = { onSubmit }\n                         className=\"uk-width-1-1 uk-form-stacked uk-flex uk-flex-center uk-flex-column\"\n                        >\n                            <div className=\"uk-margin\">\n                                <div className=\"uk-inline\">\n                                    <span className=\"uk-form-icon\" uk-icon=\"icon: user\"></span>\n                                    <input \n                                    className=\"uk-input\"\n                                    type=\"email\"\n                                    name=\"email\"\n                                    onChange = {handleChange}\n                                    placeholder=\"E-mail\"\n                                    required\n                                    value = {data[\"email\"] ? data[\"email\"]: \"\"}\n                                    />\n                                </div>\n                            </div>\n\n                            <div className=\"uk-margin\">\n                                <div className=\"uk-inline\">\n                                    <span className=\"uk-form-icon uk-form-icon-flip\" uk-icon=\"icon: lock\"></span>\n                                    <input \n                                    className=\"uk-input\"\n                                    type=\"password\" //password\n                                    required\n                                    name=\"password\"\n                                    placeholder=\"Password\"\n                                    onChange = { handleChange }\n                                    value = {data[\"password\"] ? data[\"password\"]: \"\"}\n\n                                    />\n                                </div>\n                            </div>\n                            <div className=\"uk-text-meta\">\n                                ¿Aún no tienes cuenta? {\"\"}\n                                <Link className=\"uk-text-primary\" to=\"/signup\">\n                                    Create una cuenta Morr@\n                                </Link>\n                            </div>\n                            <button className=\"uk-button uk-button-primary\">\n                                Entrar\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}","import React, {Component} from \"react\";\nimport { signup } from \"../../services/userWs\";\nimport { Link } from 'react-router-dom';\n\nexport default class SignupContainer extends Component {\n    // State === minibase de datos para la clase e hijos en caso de que se los herede \n    state = {\n        data: {\n\n        }\n    }\n\n    /* Esta función sirve para escuchar todo lo que estemos tecleando y poder guardarlo en data (está en el state)(para puros inputs), gracias a esto no tenemos que escribir el código comentado de abajo*/\n    // handleChangeEmail = (event) =>{\n    //     const { value } = event.target\n    //     let { data } = this.state\n\n    //     data[\"email\"] = value\n\n    //     this.setState({ data })\n    // }\n\n    // handleChangePassword = (event) => {\n    //     const { value } = event.target\n    //     let { data } = this.state\n\n    //     data[\"password\"] = value\n\n    //     this.setState({ data })\n    // }\n    handleChange = (event) => {\n        // {ke:value} - el key es el name\n        const { value, name } = event.target;\n        let { data } = this.state\n\n        data [name] =value\n\n        // estructura para guardar en el state\n        this.setState({ data })\n    }\n\n    // Esta función envia la info a la base de datos y validar, esto va en el form \n    onSubmit = (event) => {\n        event.preventDefault()\n        console.log(\"Voy a enviar datos\")\n        // Voy a destructurar los props\n        const { history } = this.props;\n\n        // Conectamos back con front (es una promesa)\n        signup(this.state.data)\n        .then((response)=>{\n            // Si todo sale bien mostramos un mensaje y lo mandamos a la sig sección\n            this.setState({ data:{} })\n            console.log(\"Felicidades\", response)\n            history.push(\"/\")\n        })\n        .catch((error)=>{\n            console.log(\"Hay un error\", error.response)\n        })\n    }\n    \n    render(){\n        //  Aquí podemos declarar const var y let\n        const { handleChange, onSubmit } =this; \n        const { data } = this.state;\n\n        return(\n            <section className=\"uk-section\">\n                <div className=\"uk-container uk-flex uk-flex-center\">\n                    <div className=\"uk-width-1-4\">\n                        <h3>Registrate </h3>\n                        <form\n                        // método = (()=>onSubmit(event))\n                         onSubmit = { onSubmit }\n                         className=\"uk-width-1-1 uk-form-stacked uk-flex uk-flex-center uk-flex-column\"\n                        >\n                            <div className=\"uk-margin\">\n                                <div className=\"uk-inline\">\n                                    <span className=\"uk-form-icon\" uk-icon=\"icon: user\"></span>\n                                    <input \n                                    className=\"uk-input\"\n                                    type=\"email\"\n                                    name=\"email\"\n                                    onChange = {handleChange}\n                                    placeholder=\"E-mail\"\n                                    required\n                                    value = {data[\"email\"] ? data[\"email\"]: \"\"}\n                                    />\n                                </div>\n                            </div>\n\n                            <div className=\"uk-margin\">\n                                <div className=\"uk-inline\">\n                                    <span className=\"uk-form-icon\" uk-icon=\"icon: user\"></span>\n                                    <input \n                                    className=\"uk-input\"\n                                    type=\"text\"\n                                    name=\"name\"\n                                    onChange = {handleChange}\n                                    placeholder=\"Nombre de usuario\"\n                                    required\n                                    value = {data[\"name\"] ? data[\"name\"]: \"\"}\n                                    />\n                                </div>\n                            </div>\n\n                            <div className=\"uk-margin\">\n                                <div className=\"uk-inline\">\n                                    <span className=\"uk-form-icon uk-form-icon-flip\" uk-icon=\"icon: lock\"></span>\n                                    <input \n                                    className=\"uk-input\"\n                                    type=\"password\" //password\n                                    required\n                                    name=\"password\"\n                                    placeholder=\"Password\"\n                                    onChange = { handleChange }\n                                    value = {data[\"password\"] ? data[\"password\"]: \"\"}\n\n                                    />\n                                </div>\n                            </div>\n\n                            <div className=\"uk-margin\">\n                                <div className=\"uk-inline\">\n                                    <span className=\"uk-form-icon\" uk-icon=\"icon: lock\"></span>\n                                    <input \n                                    className=\"uk-input\"\n                                    type=\"password\"\n                                    name=\"confirmPassword\"\n                                    onChange = {handleChange}\n                                    required\n                                    placeholder=\"Confirma tu password\"\n                                    value = {data[\"confirmPassword\"] ? data[\"confirmPassword\"]: \"\"}\n                                    />\n                                </div>\n                            </div>\n\n                            <div className=\"uk-text-meta\">\n                                ¿Ya tienes cuenta? {\"\"}\n                                <Link className=\"uk-text-primary\" to=\"/\">\n                                    Ingresa Morr@\n                                </Link>\n                            </div>\n\n                            <button className=\"uk-button uk-button-primary\">\n                                Regístrate\n                            </button>\n                        </form>\n                    </div>\n                </div>\n            </section>\n        );\n    }\n}","import React, {Component} from \"react\";\nimport { Link } from 'react-router-dom';\n\nclass HomeContainer extends Component {\n    render(){\n        return(\n            <div className=\"uk-section\">\n                <div className=\"uk-container\">\n                    <div className=\"uk-height-large uk-background-cover uk-overflow-hidden uk-light uk-flex uk-flex-top\" style={{backgroundImage: \"url('https://www.construyehogar.com/wp-content/uploads/2016/10/Hermosa-casa-de-%C3%A1rbol.jpg')\"}}>\n                        <div className=\"uk-width-1-2@m uk-text-center uk-margin-auto uk-margin-auto-vertical\">\n                            <h1 uk-parallax=\"opacity: 0,1; y: -100,0; scale: 2,1; viewport: 0.5;\">Headline</h1>\n                            <p uk-parallax=\"opacity: 0,1; y: 100,0; scale: 0.5,1; viewport: 0.5;\">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.</p>\n                        </div>\n                    </div>\n                </div>\n                Este es mi home\n                <Link to=\"/signup\">\n                    Registro\n                </Link>\n                <Link to=\"/login\">\n                    Ingresar\n                </Link>\n            </div>\n        )\n    }\n}\n\nexport default HomeContainer;","import React from \"react\";\nimport {Switch, Route} from \"react-router-dom\";\nimport AuthContainer from \"./containers/authContainer/AuthContainer\";\nimport SignupContainer from \"./containers/authContainer/SignupContainer\";\nimport HomeContainer from \"./containers/homeContainer\";\n\nconst Routes = ()=> (\n    <Switch>\n        {/* La navegación raíz es : https://www.dylanpage.com/ */}\n        <Route exact path = \"/\" component = {HomeContainer} />\n        <Route exact path = \"/login\" component = {AuthContainer} />\n        <Route exact path = \"/signup\" component = {SignupContainer} />\n\n    </Switch>\n)\n\nexport default Routes;","import React, {Component} from 'react'; \nimport './App.css';\nimport Routes from './Router';\n\nclass App extends Component {\n  render(){\n    return (\n      <div className=\"App\">\n        <Routes/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n// Importar UI Kit\nimport UIkit from \"uikit\";\nimport Icons from \"uikit/dist/js/uikit-icons\";\nimport \"uikit/dist/css/uikit.min.css\";\n\n// Importamos configuración de las rutas\nimport {BrowserRouter} from \"react-router-dom\"\n\n// Usamos UIkit para los icons\nUIkit.use(Icons)\n\n// Declaramos el withrouter para usar las rutas\n\n// esto es jsx\nconst WithRouter = ()=>(\n  <BrowserRouter>\n    <App/>\n  </BrowserRouter>\n)\n\nReactDOM.render(\n    <WithRouter />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}